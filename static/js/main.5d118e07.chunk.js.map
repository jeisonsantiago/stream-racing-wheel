{"version":3,"sources":["g920/wheel.js","App.js","g920/pedal.js","g920/pedals.js","g920/shifter.js","g920/shifterbase.js","serviceWorker.js","index.js"],"names":["flatstore","set","Wheel","maxrotation","get","wheelStyle","transform","this","props","currentRotation","alt","style","src","Component","Pedal","connect","ownProps","axis","key","value","store","currentPos","downAmount","width","position","top","left","Pedals","ShifterBase","halfGrid","gridSize","halfGridY","moveX","moveY","speed","gear","shifterStyle","transition","highlightStyle","backgroundColor","height","highlightX","highlightY","display","gear1","gear2","gear3","gear4","gear5","gear6","reverse","gearButton","pressed","defaultButtons","defaultAxes","i","push","touched","App","gamePads","start","a","b","gamePadIndex","state","gameLoopStarted","rotation","gameLoop","bind","onGamepadConnected","window","addEventListener","e","gp","navigator","getGamepads","gamepad","index","console","log","id","buttons","length","axes","setState","toLowerCase","indexOf","changeGamepad","target","gamepadIndex","Object","values","map","isSelected","selected","buttonStates","button","buttonState","axesStates","requestAnimationFrame","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d118e07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\n\r\nflatstore.set('maxrotation', 900);\r\nclass Wheel extends Component {\r\n\r\n    render() {\r\n        let maxrotation = flatstore.get('maxrotation');\r\n        let degrees = this.props.currentRotation * (maxrotation / 2);\r\n        let wheelStyle = {\r\n            //width: '400px',\r\n            transform: 'rotate(' + degrees + 'deg)'\r\n        };\r\n\r\n        return (\r\n            <img alt=\"\" style={wheelStyle} src=\"/stream-racing-wheel/g920/wheel.png\" />\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['axes-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        currentRotation: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(Wheel);","import React, { Component } from 'react';\nimport './index.css';\n\nimport Wheel from './g920/wheel';\nimport Pedals from './g920/pedals';\nimport ShifterBase from './g920/shifterbase';\n\nimport flatstore from 'flatstore';\n\nlet defaultButtons = [];\nlet defaultAxes = [];\nfor (let i = 0; i < 20; i++) {\n  defaultButtons.push({ pressed: false, touched: false, value: 0 })\n  defaultAxes.push(0);\n}\n\nflatstore.set(\"buttons\", defaultButtons);\nflatstore.set(\"axes\", defaultAxes);\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamePads = {};\n\n    this.start = 0;\n    this.a = 0;\n    this.b = 0;\n\n    this.gamePadIndex = -1;\n\n    this.state = {\n      gameLoopStarted: false,\n      rotation: 900\n    }\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.onGamepadConnected = this.onGamepadConnected.bind(this);\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n  }\n\n  onGamepadConnected(e) {\n    var gp = navigator.getGamepads()[e.gamepad.index];\n    console.log(\n      \"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\n      gp.index, gp.id, gp.buttons.length, gp.axes.length\n    );\n    this.gamePads[gp.index] = gp;\n    this.setState({ gamePads: this.gamePads })\n    if (gp.id.toLowerCase().indexOf(\"wheel\") > -1) {\n      this.changeGamepad(gp.index);\n    }\n  }\n\n  onChange(e) {\n    this.changeGamepad(e.target.value);\n\n  }\n\n  changeGamepad(id) {\n    console.log(id);\n    this.gamePadIndex = id;\n    this.setState({ gamepadIndex: id, gameLoopStarted: true })\n    this.gameLoop();\n  }\n\n  onWheelRotationChange(e) {\n    let rotation = e.target.value;\n    flatstore.set('maxrotation', rotation);\n    this.setState({ rotation })\n  }\n\n  render() {\n    //let gamepads = navigator.getGamepads();\n    //console.log(gamepads)\n    var options = Object.values(this.gamePads).map(gp => {\n\n      let isSelected = gp.index === this.gamePadIndex;\n      return (<option selected={isSelected} value={gp.index}>{gp.id}</option>)\n\n    }\n    );\n\n    return (\n      <div style={{ width: '600px', height: '100%', position: 'absolute', top: '0px', left: '0px' }}>\n        {/* <label style={{ color: 'white' }}>Driving System</label><select name=\"gamepadSelection\" onChange={(e) => { this.onChange(e) }}>\n          {options}\n        </select>\n        <br />\n        <label style={{ color: 'white' }}>Max Rotation</label><input name=\"wheelRotation\" type=\"number\" value={this.state.rotation} onChange={(e) => { this.onWheelRotationChange(e) }} />\n        <br />\n        <div style={{ position: 'relative', top: '20px', }}>\n          <Wheel axis={0} rotation={this.state.rotation} />\n        </div>\n        <div style={{ position: 'relative', top: '-300px', left: \"500px\", 'marginLeft': '50px' }}>\n          <ShifterBase />\n        </div> */}\n        <div style={{ position: 'relative', top: '-170px', left: \"30px\", 'marginLeft': '50px' }}>\n          <Pedals />\n        </div>\n\n\n      </div>\n\n    )\n  }\n\n  buttonPressed(b) {\n    if (typeof (b) == \"object\") {\n      return b.pressed;\n    }\n    return b === 1.0;\n  }\n\n  gameLoop() {\n    if (this.gamePadIndex === -1)\n      return;\n\n    //var gp = this.gamePads[this.gamePadIndex];\n    var gp = navigator.getGamepads()[this.gamePadIndex];\n    let buttonStates = [];\n    for (let i = 0; i < gp.buttons.length; i++) {\n      let button = gp.buttons[i];\n      let buttonState = {\n        pressed: button.pressed,\n        touched: button.touched,\n        value: button.value\n      }\n      buttonStates.push(buttonState);\n    }\n\n    let axesStates = [];\n    for (let i = 0; i < gp.axes.length; i++) {\n      let axis = gp.axes[i];\n      axesStates.push(axis);\n    }\n\n    flatstore.set(\"buttons\", buttonStates);\n    flatstore.set(\"axes\", axesStates);\n\n    this.start = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nclass Pedal extends Component {\r\n\r\n    render() {\r\n        let currentPos = this.props.downAmount * this.props.value * -1;\r\n\r\n        let wheelStyle = {\r\n            width: '70px',\r\n            position: 'absolute',\r\n            top: this.props.top + 'px',\r\n            left: this.props.left + 'px',\r\n            transform: 'translateY(' + currentPos + 'px)'\r\n        };\r\n\r\n        return (\r\n            <img alt=\"\" style={wheelStyle} src={this.props.src} />\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['axes-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        value: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(Pedal);","import React, { Component } from 'react';\r\n\r\nimport Pedal from './pedal';\r\n\r\nclass Pedals extends Component {\r\n\r\n    render() {\r\n\r\n        let pedalsStyle = {\r\n            width: '400px'\r\n        }\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <Pedal top={-10} left={40} downAmount={50} axis={1} src=\"/stream-racing-wheel/g920/clutch.png\" />\r\n                <Pedal top={-10} left={160} downAmount={50} axis={5} src=\"/stream-racing-wheel/g920/brake.png\" />\r\n                <Pedal top={-20} left={290} downAmount={50} axis={2} src=\"/stream-racing-wheel/g920/gas.png\" />\r\n\r\n                <img alt=\"\" style={pedalsStyle} src=\"/stream-racing-wheel/g920/pedals.png\" />\r\n                {/* test */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Pedals;\r\n","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nclass ShifterBase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.halfGrid = this.props.gridSize / 2.0;\r\n        this.halfGridY = this.props.gridSize / 2.2;\r\n        this.moveX = 0;\r\n        this.moveY = 0;\r\n    }\r\n\r\n    render() {\r\n        let speed = '100ms';\r\n        let highlightX = 0;\r\n        let highlightY = 0;\r\n\r\n        switch (this.props.gear) {\r\n            case -1: speed = '500ms'; this.moveX = 0; this.moveY = 0; break;\r\n            case 0: this.moveX = this.halfGrid; this.moveY = this.halfGridY; break;\r\n            case 1: this.moveX = -this.halfGrid; this.moveY = -this.halfGridY; break;\r\n            case 2: this.moveX = -this.halfGrid; this.moveY = this.halfGridY; break;\r\n            case 3: this.moveX = 0; this.moveY = -this.halfGridY; break;\r\n            case 4: this.moveX = 0; this.moveY = this.halfGridY; break;\r\n            case 5: this.moveX = this.halfGrid; this.moveY = -this.halfGridY; break;\r\n            case 6: this.moveX = this.halfGrid; this.moveY = this.halfGridY; break;\r\n            default: speed = '500ms'; this.moveX = 0; this.moveY = 0; break;\r\n        }\r\n        let shifterStyle = {\r\n            width: '150px',\r\n            'zIndex': '999',\r\n            position: 'absolute',\r\n            top: this.props.top + 'px',\r\n            left: this.props.left + 'px',\r\n            transition: 'all ' + speed,\r\n            transform: 'translate(' + this.moveX + 'px, ' + this.moveY + 'px)'\r\n        };\r\n\r\n\r\n\r\n        let highlightStyle = {\r\n            backgroundColor: 'red',\r\n            width: '10px',\r\n            height: '20px',\r\n            'zIndex': '999',\r\n            position: 'absolute',\r\n            top: highlightX + 'px',\r\n            left: highlightY + 'px',\r\n            display: 'none'\r\n        }\r\n\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <div style={highlightStyle}></div>\r\n                <img alt=\"\" style={shifterStyle} src=\"/stream-racing-wheel/g920/shifter.png\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['buttons-' + ownProps.gear1, 'buttons-' + ownProps.gear2, 'buttons-' + ownProps.gear3, 'buttons-' + ownProps.gear4, 'buttons-' + ownProps.gear5, 'buttons-' + ownProps.gear6, 'buttons-' + ownProps.reverse];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n\r\n    let gear = ownProps.gear || -1;\r\n    let gearButton = ownProps.gearButton || -1;\r\n\r\n    if (value.pressed) {\r\n        switch (key) {\r\n            case 'buttons-' + ownProps.gear1: gear = 1; gearButton = ownProps.gear1; break;\r\n            case 'buttons-' + ownProps.gear2: gear = 2; gearButton = ownProps.gear2; break;\r\n            case 'buttons-' + ownProps.gear3: gear = 3; gearButton = ownProps.gear3; break;\r\n            case 'buttons-' + ownProps.gear4: gear = 4; gearButton = ownProps.gear4; break;\r\n            case 'buttons-' + ownProps.gear5: gear = 5; gearButton = ownProps.gear5; break;\r\n            case 'buttons-' + ownProps.gear6: gear = 6; gearButton = ownProps.gear6; break;\r\n            case 'buttons-' + ownProps.reverse: gear = 0; gearButton = ownProps.reverse; break;\r\n            default: gear = -1; break;\r\n        }\r\n    }\r\n    else if ('buttons-' + ownProps.gearButton === key) {\r\n        gear = -1;\r\n    }\r\n    return {\r\n        gear,\r\n        gearButton\r\n    };\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(ShifterBase);","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nimport Shifter from './shifter';\r\n\r\nclass ShifterBase extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <Shifter\r\n                    top={70}\r\n                    left={50}\r\n                    gridSize={150}\r\n                    gear1={12}\r\n                    gear2={13}\r\n                    gear3={14}\r\n                    gear4={15}\r\n                    gear5={16}\r\n                    gear6={17}\r\n                    reverse={11} />\r\n                <img alt=\"\" width=\"250px\" src=\"/stream-racing-wheel/g920/shifter-base.png\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['buttons-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        value: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(ShifterBase);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}