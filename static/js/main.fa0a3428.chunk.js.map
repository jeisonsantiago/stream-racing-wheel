{"version":3,"sources":["App.js","g920/wheel.js","g920/pedal.js","g920/pedals.js","g920/shifter.js","g920/shifterbase.js","serviceWorker.js","index.js"],"names":["Wheel","wheelStyle","transform","this","props","rotation","alt","style","src","Component","flatstore","connect","ownProps","axis","key","value","store","Pedal","currentPos","downAmount","width","position","top","left","Pedals","ShifterBase","halfGrid","gridSize","halfGridY","moveX","moveY","speed","gear","shifterStyle","transition","highlightStyle","backgroundColor","height","highlightX","highlightY","display","gear1","gear2","gear3","gear4","gear5","gear6","reverse","gearButton","pressed","defaultButtons","defaultAxes","i","push","touched","set","App","gamePads","start","a","b","gamePadIndex","state","gameLoopStarted","gameLoop","bind","onGamepadConnected","window","addEventListener","e","gp","navigator","getGamepads","gamepad","index","console","log","id","buttons","length","axes","setState","toLowerCase","indexOf","changeGamepad","target","gamepadIndex","options","Object","values","map","isSelected","selected","paddingLeft","name","onChange","buttonStates","button","buttonState","axesStates","requestAnimationFrame","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa0a3428.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Wheel from './g920/wheel';\nimport Pedals from './g920/pedals';\nimport ShifterBase from './g920/shifterbase';\n\nimport flatstore from 'flatstore';\n\nlet defaultButtons = [];\nlet defaultAxes = [];\nfor (let i = 0; i < 20; i++) {\n  defaultButtons.push({ pressed: false, touched: false, value: 0 })\n  defaultAxes.push(0);\n}\n\nflatstore.set(\"buttons\", defaultButtons);\nflatstore.set(\"axes\", defaultAxes);\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamePads = {};\n\n    this.start = 0;\n    this.a = 0;\n    this.b = 0;\n\n    this.gamePadIndex = -1;\n\n    this.state = {\n      gameLoopStarted: false\n    }\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.onGamepadConnected = this.onGamepadConnected.bind(this);\n    window.addEventListener(\"gamepadconnected\", this.onGamepadConnected);\n  }\n\n  onGamepadConnected(e) {\n    var gp = navigator.getGamepads()[e.gamepad.index];\n    console.log(\n      \"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\n      gp.index, gp.id, gp.buttons.length, gp.axes.length\n    );\n    this.gamePads[gp.index] = gp;\n    this.setState({ gamePads: this.gamePads })\n    if (gp.id.toLowerCase().indexOf(\"wheel\") > -1) {\n      this.changeGamepad(gp.index);\n    }\n  }\n\n  onChange(e) {\n    this.changeGamepad(e.target.value);\n\n  }\n\n  changeGamepad(id) {\n    console.log(id);\n    this.gamePadIndex = id;\n    this.setState({ gamepadIndex: id, gameLoopStarted: true })\n    this.gameLoop();\n  }\n\n  render() {\n    //let gamepads = navigator.getGamepads();\n    //console.log(gamepads)\n    var options = Object.values(this.gamePads).map(gp => {\n\n      let isSelected = gp.index === this.gamePadIndex;\n      return (<option selected={isSelected} value={gp.index}>{gp.id}</option>)\n\n    }\n    );\n\n    return (\n      <div style={{ paddingLeft: '50px', backgroundColor: '#133a4d' }}>\n        <select name=\"gamepadSelection\" onChange={(e) => { this.onChange(e) }}>\n          {options}\n        </select>\n        <br />\n        <div style={{ position: 'relative', top: '20px', }}>\n          <Wheel axis={0} />\n        </div>\n        <div style={{ position: 'relative', top: '-300px', left: \"500px\", 'marginLeft': '50px' }}>\n          <ShifterBase />\n        </div>\n        <div style={{ position: 'relative', top: '-170px', left: \"30px\", 'marginLeft': '50px' }}>\n          <Pedals />\n        </div>\n\n\n      </div>\n\n    )\n  }\n\n  buttonPressed(b) {\n    if (typeof (b) == \"object\") {\n      return b.pressed;\n    }\n    return b === 1.0;\n  }\n\n  gameLoop() {\n    if (this.gamePadIndex === -1)\n      return;\n\n    //var gp = this.gamePads[this.gamePadIndex];\n    var gp = navigator.getGamepads()[this.gamePadIndex];\n    let buttonStates = [];\n    for (let i = 0; i < gp.buttons.length; i++) {\n      let button = gp.buttons[i];\n      let buttonState = {\n        pressed: button.pressed,\n        touched: button.touched,\n        value: button.value\n      }\n      buttonStates.push(buttonState);\n    }\n\n    let axesStates = [];\n    for (let i = 0; i < gp.axes.length; i++) {\n      let axis = gp.axes[i];\n      axesStates.push(axis);\n    }\n\n    flatstore.set(\"buttons\", buttonStates);\n    flatstore.set(\"axes\", axesStates);\n\n    this.start = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nclass Wheel extends Component {\r\n\r\n    render() {\r\n        let degrees = this.props.rotation * 900;\r\n        let wheelStyle = {\r\n            //width: '400px',\r\n            transform: 'rotate(' + degrees + 'deg)'\r\n        };\r\n\r\n        return (\r\n            <img alt=\"\" style={wheelStyle} src=\"g920/wheel.png\" />\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['axes-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        rotation: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(Wheel);","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nclass Pedal extends Component {\r\n\r\n    render() {\r\n        let currentPos = this.props.downAmount * this.props.value * -1;\r\n\r\n        let wheelStyle = {\r\n            width: '70px',\r\n            position: 'absolute',\r\n            top: this.props.top + 'px',\r\n            left: this.props.left + 'px',\r\n            transform: 'translateY(' + currentPos + 'px)'\r\n        };\r\n\r\n        return (\r\n            <img alt=\"\" style={wheelStyle} src={this.props.src} />\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['axes-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        value: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(Pedal);","import React, { Component } from 'react';\r\n\r\nimport Pedal from './pedal';\r\n\r\nclass Pedals extends Component {\r\n\r\n    render() {\r\n\r\n        let pedalsStyle = {\r\n            width: '400px'\r\n        }\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <Pedal top={-20} left={290} downAmount={50} axis={1} src=\"g920/gas.png\" />\r\n                <Pedal top={-10} left={160} downAmount={50} axis={2} src=\"g920/brake.png\" />\r\n                <Pedal top={-10} left={40} downAmount={50} axis={5} src=\"g920/clutch.png\" />\r\n\r\n                <img alt=\"\" style={pedalsStyle} src=\"g920/pedals.png\" />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Pedals;","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nclass ShifterBase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.halfGrid = this.props.gridSize / 2.0;\r\n        this.halfGridY = this.props.gridSize / 2.2;\r\n        this.moveX = 0;\r\n        this.moveY = 0;\r\n    }\r\n\r\n    render() {\r\n        let speed = '100ms';\r\n        let highlightX = 0;\r\n        let highlightY = 0;\r\n\r\n        switch (this.props.gear) {\r\n            case -1: speed = '500ms'; this.moveX = 0; this.moveY = 0; break;\r\n            case 0: this.moveX = this.halfGrid; this.moveY = this.halfGridY; break;\r\n            case 1: this.moveX = -this.halfGrid; this.moveY = -this.halfGridY; break;\r\n            case 2: this.moveX = -this.halfGrid; this.moveY = this.halfGridY; break;\r\n            case 3: this.moveX = 0; this.moveY = -this.halfGridY; break;\r\n            case 4: this.moveX = 0; this.moveY = this.halfGridY; break;\r\n            case 5: this.moveX = this.halfGrid; this.moveY = -this.halfGridY; break;\r\n            case 6: this.moveX = this.halfGrid; this.moveY = this.halfGridY; break;\r\n            default: speed = '500ms'; this.moveX = 0; this.moveY = 0; break;\r\n        }\r\n        let shifterStyle = {\r\n            width: '150px',\r\n            'zIndex': '999',\r\n            position: 'absolute',\r\n            top: this.props.top + 'px',\r\n            left: this.props.left + 'px',\r\n            transition: 'all ' + speed,\r\n            transform: 'translate(' + this.moveX + 'px, ' + this.moveY + 'px)'\r\n        };\r\n\r\n\r\n\r\n        let highlightStyle = {\r\n            backgroundColor: 'red',\r\n            width: '10px',\r\n            height: '20px',\r\n            'zIndex': '999',\r\n            position: 'absolute',\r\n            top: highlightX + 'px',\r\n            left: highlightY + 'px',\r\n            display: 'none'\r\n        }\r\n\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <div style={highlightStyle}></div>\r\n                <img alt=\"\" style={shifterStyle} src=\"g920/shifter.png\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['buttons-' + ownProps.gear1, 'buttons-' + ownProps.gear2, 'buttons-' + ownProps.gear3, 'buttons-' + ownProps.gear4, 'buttons-' + ownProps.gear5, 'buttons-' + ownProps.gear6, 'buttons-' + ownProps.reverse];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n\r\n    let gear = ownProps.gear || -1;\r\n    let gearButton = ownProps.gearButton || -1;\r\n\r\n    if (value.pressed) {\r\n        switch (key) {\r\n            case 'buttons-' + ownProps.gear1: gear = 1; gearButton = ownProps.gear1; break;\r\n            case 'buttons-' + ownProps.gear2: gear = 2; gearButton = ownProps.gear2; break;\r\n            case 'buttons-' + ownProps.gear3: gear = 3; gearButton = ownProps.gear3; break;\r\n            case 'buttons-' + ownProps.gear4: gear = 4; gearButton = ownProps.gear4; break;\r\n            case 'buttons-' + ownProps.gear5: gear = 5; gearButton = ownProps.gear5; break;\r\n            case 'buttons-' + ownProps.gear6: gear = 6; gearButton = ownProps.gear6; break;\r\n            case 'buttons-' + ownProps.reverse: gear = 0; gearButton = ownProps.reverse; break;\r\n            default: gear = -1; break;\r\n        }\r\n    }\r\n    else if ('buttons-' + ownProps.gearButton === key) {\r\n        gear = -1;\r\n    }\r\n    return {\r\n        gear,\r\n        gearButton\r\n    };\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(ShifterBase);","import React, { Component } from 'react';\r\nimport flatstore from 'flatstore';\r\nimport Shifter from './shifter';\r\n\r\nclass ShifterBase extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <Shifter\r\n                    top={70}\r\n                    left={50}\r\n                    gridSize={150}\r\n                    gear1={12}\r\n                    gear2={13}\r\n                    gear3={14}\r\n                    gear4={15}\r\n                    gear5={16}\r\n                    gear6={17}\r\n                    reverse={11} />\r\n                <img alt=\"\" width=\"250px\" src=\"g920/shifter-base.png\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet onCustomWatched = (ownProps) => {\r\n    return ['buttons-' + ownProps.axis];\r\n}\r\nlet onCustomProps = (key, value, store, ownProps) => {\r\n    return {\r\n        value: value\r\n    }\r\n}\r\n\r\nexport default flatstore.connect([], onCustomWatched, onCustomProps)(ShifterBase);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}